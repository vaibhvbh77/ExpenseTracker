{"ast":null,"code":"var _jsxFileName = \"/Users/test/Desktop/REACT/Revisit/01-starting-setup/src/components/Chart/Chart.jsx\";\nimport React from \"react\";\n// import \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\n// assume receving a data point its and array of objects which has a value,label field.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Chart(props) {\n  //we need to find the max value for the year from the given months so for that we need the value array as we are only interested inside the value of the max not the\n\n  const dataPointValue = props.dataPoint.map(dataPoint => {\n    return dataPoint.value;\n  });\n  //we can use spread operator for the max math function to find the max value\n  const maxValue = Math.max(...dataPointValue);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chart\",\n    children: props.dataPoint.map(dataPoint => {\n      return /*#__PURE__*/_jsxDEV(ChartBar, {\n        value: dataPoint.value,\n        maxValue: maxValue,\n        label: dataPoint.label\n      }, dataPoint.label, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_c = Chart;\nexport default Chart;\nvar _c;\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"names":["React","ChartBar","Chart","props","dataPointValue","dataPoint","map","value","maxValue","Math","max","label"],"sources":["/Users/test/Desktop/REACT/Revisit/01-starting-setup/src/components/Chart/Chart.jsx"],"sourcesContent":["import React from \"react\";\n// import \"./Chart.css\";\nimport ChartBar from \"./ChartBar\";\n\n// assume receving a data point its and array of objects which has a value,label field.\nfunction Chart(props) {\n  //we need to find the max value for the year from the given months so for that we need the value array as we are only interested inside the value of the max not the\n\n  const dataPointValue = props.dataPoint.map((dataPoint) => {\n    return dataPoint.value;\n  });\n  //we can use spread operator for the max math function to find the max value\n  const maxValue = Math.max(...dataPointValue);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoint.map((dataPoint) => {\n        return (\n          <ChartBar\n            key={dataPoint.label}\n            value={dataPoint.value}\n            maxValue={maxValue}\n            label={dataPoint.label}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Chart;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,QAAQ,MAAM,YAAY;;AAEjC;AAAA;AACA,SAASC,KAAK,CAACC,KAAK,EAAE;EACpB;;EAEA,MAAMC,cAAc,GAAGD,KAAK,CAACE,SAAS,CAACC,GAAG,CAAED,SAAS,IAAK;IACxD,OAAOA,SAAS,CAACE,KAAK;EACxB,CAAC,CAAC;EACF;EACA,MAAMC,QAAQ,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,cAAc,CAAC;EAE5C,oBACE;IAAK,SAAS,EAAC,OAAO;IAAA,UACnBD,KAAK,CAACE,SAAS,CAACC,GAAG,CAAED,SAAS,IAAK;MAClC,oBACE,QAAC,QAAQ;QAEP,KAAK,EAAEA,SAAS,CAACE,KAAM;QACvB,QAAQ,EAAEC,QAAS;QACnB,KAAK,EAAEH,SAAS,CAACM;MAAM,GAHlBN,SAAS,CAACM,KAAK;QAAA;QAAA;QAAA;MAAA,QAIpB;IAEN,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV;AAAC,KAvBQT,KAAK;AAyBd,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}